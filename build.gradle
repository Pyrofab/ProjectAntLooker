buildscript {
    ext.kotlin_version = '1.2.20'

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.15"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'TeamAntlook'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = 1.8

sourceSets {
    lib
    main.compileClasspath += configurations.libCompile
    main.runtimeClasspath += configurations.libRuntime
}

repositories {
    mavenCentral()
//    maven { url "https://raw.github.com/JavaOpenCVBook/code/maven2/" }
    maven { url 'http://maven2.javacv.googlecode.com/git/' }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    compile 'com.googlecode.javacv:javacv:0.5'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.bytedeco:javacv-platform:1.4"
    compile sourceSets.lib.output
    compile files("marvin/framework/marvin_1.5.5.jar")
    runtime configurations.libRuntime
}

jar {
    from sourceSets.lib.output
}

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = baseName + "-$set.name"
        from set.output
    }

    artifacts {
        archives jarTask
    }
}

dokka {
    outputFormat = 'html'
    //noinspection GroovyAssignabilityCheck
    outputDirectory = "$buildDir/dokka"

    kotlinTasks {
        defaultKotlinTasks()
    }

    jdkVersion = 8

    impliedPlatforms = ["JVM"]

    noStdlibLink = false
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    //noinspection GroovyAssignabilityCheck
    outputDirectory = "$buildDir/javadoc"
}

task dokkaMarkdown(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'markdown'
    //noinspection GroovyAssignabilityCheck
    outputDirectory = "$buildDir/mddoc"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}